JSON
 4. Создать внешний репозиторий c названием JSON. - создаём на сайте
 5. Клонировать репозиторий JSON на локальный компьютер. - git clone "ссылка на репозиторий"
 6. Внутри локального JSON создать файл “new.json”. - touch new.json
 7. Добавить файл под гит. - git add .
 8. Закоммитить файл. - git commit -m "blablablabla"
 9. Отправить файл на внешний GitHub репозиторий. - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - vim new.json
 11. Отправить изменения на внешний репозиторий. - git add . / git commit -m "lalala" а после git push
 12. Создать файл preferences.json - vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - vim sklls.json
 15. Отправить сразу 2 файла на внешний репозиторий. - git add . / git commit -m "lol" / git push
 16. На веб интерфейсе создать файл bug_report.json. - add file - Create new file - bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON - git pull

XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.
 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML

TXT
 39. Создать внешний репозиторий c названием TXT.
 40. Клонировать репозиторий TXT на локальный компьютер.
 41. Внутри локального TXT создать файл “new.txt”.
 42. Добавить файл под гит.
 43. Закоммитить файл.
 44. Отправить файл на внешний GitHub репозиторий.
 45. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 46. Отправить изменения на внешний репозиторий.
 47. Создать файл preferences.txt
 48. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 49. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 50. Сделать коммит в одну строку.
 51. Отправить сразу 2 файла на внешний репозиторий.
 52. На веб интерфейсе создать файл bug_report.txt.
 53. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 54. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 55. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 56. Синхронизировать внешний и локальный репозиторий TXT

